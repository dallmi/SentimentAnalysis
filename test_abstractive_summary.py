"""
Test Abstractive Summarization with German Corporate Text
"""

import sys
from pathlib import Path

# Add LLM Solution to path
sys.path.insert(0, str(Path(__file__).parent / "LLM Solution"))

try:
    from abstractive_summarizer import AbstractiveSummarizer
    print("‚úì AbstractiveSummarizer imported successfully")
except ImportError as e:
    print(f"‚ùå Failed to import AbstractiveSummarizer: {e}")
    print("\nMake sure transformers is installed:")
    print("  pip install transformers torch")
    sys.exit(1)


def test_german_corporate_articles():
    """Test with realistic German corporate intranet articles"""

    test_articles = [
        {
            "title": "Neue Homeoffice-Regelung 2025",
            "content": """
            Die Gesch√§ftsf√ºhrung hat nach umfangreichen Mitarbeiterbefragungen eine neue
            Richtlinie f√ºr flexibles Arbeiten verabschiedet. Ab dem 1. Januar 2025 k√∂nnen
            alle Mitarbeiter bis zu drei Tage pro Woche von zu Hause arbeiten. Diese
            Entscheidung wurde getroffen, um die Work-Life-Balance zu verbessern und die
            Mitarbeiterzufriedenheit zu erh√∂hen. Die IT-Abteilung stellt die notwendige
            Hardware und Software zur Verf√ºgung. F√ºr die Nutzung ist ein Antrag √ºber das
            HR-Portal erforderlich. F√ºhrungskr√§fte m√ºssen die Antr√§ge innerhalb von f√ºnf
            Arbeitstagen pr√ºfen. Die neue Regelung gilt f√ºr alle Abteilungen au√üer dem
            Kundenservice. Mitarbeiter im Kundenservice haben spezielle Schichtpl√§ne und
            sind davon ausgenommen. Weitere Details finden Sie im Mitarbeiterhandbuch.
            """
        },
        {
            "title": "Einf√ºhrung neuer KI-Tools",
            "content": """
            Das Unternehmen investiert massiv in k√ºnstliche Intelligenz. Im Rahmen der
            Digitalisierungsstrategie werden mehrere KI-Tools eingef√ºhrt. ChatGPT Enterprise
            steht allen Mitarbeitern f√ºr Produktivit√§tssteigerung zur Verf√ºgung. Ein
            automatisiertes Dokumenten-Management-System wird in der Rechtsabteilung
            implementiert. Die Einf√ºhrung erfolgt schrittweise √ºber drei Quartale.
            Schulungen beginnen im Februar 2025. Alle Mitarbeiter erhalten verpflichtende
            Trainings zur KI-Nutzung. Datenschutz hat h√∂chste Priorit√§t. Sensible Daten
            d√ºrfen nicht in externe KI-Systeme eingegeben werden. Ein internes KI-Governance-
            Team wurde gegr√ºndet. Bei Fragen wenden Sie sich an ki-support@company.com.
            """
        },
        {
            "title": "Nachhaltigkeitsinitiative",
            "content": """
            Das Unternehmen hat sich ehrgeizige Nachhaltigkeitsziele gesetzt. Bis 2030 soll
            CO2-Neutralit√§t erreicht werden. Alle Standorte werden auf erneuerbare Energien
            umgestellt. Photovoltaik-Anlagen werden auf allen Geb√§uden installiert. Die
            Firmenflotte wird vollst√§ndig elektrifiziert. Gesch√§ftsreisen sollen um 50%
            reduziert werden. Stattdessen werden virtuelle Meetings bevorzugt. Papierverbrauch
            wird minimiert durch digitale Prozesse. Ein Nachhaltigkeitsbericht wird
            quartalsweise ver√∂ffentlicht. Mitarbeiter k√∂nnen Verbesserungsvorschl√§ge
            einreichen. Die besten Ideen werden mit Pr√§mien belohnt.
            """
        }
    ]

    print("\n" + "=" * 80)
    print("TESTING ABSTRACTIVE SUMMARIZATION WITH GERMAN CORPORATE ARTICLES")
    print("=" * 80)

    try:
        print("\n[1/2] Loading mBART-large-50 model...")
        print("   (This may take 30-60 seconds on first load)")
        summarizer = AbstractiveSummarizer()
        print("   ‚úì Model loaded successfully!")

        print("\n[2/2] Testing summarization on 3 German articles...")
        print("=" * 80)

        for i, article in enumerate(test_articles, 1):
            title = article['title']
            content = article['content']
            combined = f"{title}. {content}"

            print(f"\n{'‚îÄ' * 80}")
            print(f"ARTICLE {i}: {title}")
            print(f"{'‚îÄ' * 80}")
            print(f"\nüìÑ Original ({len(content.split())} words):")
            print(content.strip()[:200] + "...")

            # Generate summary
            print(f"\n‚è≥ Generating abstractive summary...")
            summary = summarizer.summarize(
                combined,
                source_lang="de_DE",
                max_length=100,
                min_length=30
            )

            print(f"\n‚ú® Abstractive Summary ({len(summary.split())} words):")
            print(f"   {summary}")

        print("\n" + "=" * 80)
        print("‚úì ALL TESTS PASSED!")
        print("=" * 80)
        print("\n‚úì Abstractive summarization is working correctly")
        print("‚úì Ready for production use with --abstractive flag")
        print("\nUsage:")
        print("  python main_bertopic.py --input data.json --abstractive")

        return True

    except FileNotFoundError as e:
        print(f"\n‚ùå Model not found: {e}")
        print("\nPlease download the model first:")
        print("  python setup/download_mbart_model.py")
        return False

    except Exception as e:
        print(f"\n‚ùå Error during testing: {e}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    success = test_german_corporate_articles()
    sys.exit(0 if success else 1)
